/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/burger.glb -t 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    Cube001: THREE.Mesh;
    Plane: THREE.Mesh;
    Cube002: THREE.Mesh;
  };
  materials: {
    Bun: THREE.MeshStandardMaterial;
    Meat: THREE.MeshStandardMaterial;
    Cheese: THREE.MeshStandardMaterial;
  };
  animations: any;
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Burger(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/burger.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cube.geometry}
        material={materials.Bun}
        position={[0, 0.07, 0]}
        scale={0.972}
      />
      <mesh
        geometry={nodes.Cube001.geometry}
        material={materials.Meat}
        position={[0, 1.467, 0]}
      />
      <mesh
        geometry={nodes.Plane.geometry}
        material={materials.Cheese}
        position={[0, -2.164, 0]}
      />
      <mesh
        geometry={nodes.Cube002.geometry}
        material={materials.Bun}
        position={[0, 3.64, 0]}
        rotation={[3.142, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/burger.glb");
